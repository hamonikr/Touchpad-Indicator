#!/usr/bin/python3
# -*- coding: UTF-8 -*-
#
# touchpad-Indicator launcher
#
# Copyright (C) 2011-2018 Lorenzo Carbonell Cerezo
# lorenzo.carbonell.cerezo@gmail.com
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

import os
import sys
import subprocess
import gi
gi.require_version('Gtk', '3.0')
gi.require_version('Notify', '0.7')
from gi.repository import Gtk, Notify

def check_touchpad():
    try:
        output = subprocess.check_output(['xinput', 'list'], universal_newlines=True)
        return 'touchpad' in output.lower() or 'synaptics' in output.lower()
    except subprocess.CalledProcessError:
        return False

def show_warning_dialog():
    try:
        Notify.init("Touchpad Indicator")
        notification = Notify.Notification.new(
            "Touchpad Indicator",
            "No touchpad device found. Some features may not work.",
            "dialog-warning"
        )
        notification.show()
    except Exception as e:
        print(f"Warning: Could not show notification: {str(e)}")

if __name__ == '__main__':
    # Add application directory to Python path
    app_dir = '/usr/share/touchpad-indicator'
    if not os.path.exists(app_dir):
        dialog = Gtk.MessageDialog(
            None,
            Gtk.DialogFlags.MODAL,
            Gtk.MessageType.ERROR,
            Gtk.ButtonsType.OK,
            "Application directory not found. Please check the installation."
        )
        dialog.run()
        dialog.destroy()
        sys.exit(1)
    
    if app_dir not in sys.path:
        sys.path.insert(1, app_dir)

    # Check for touchpad
    has_touchpad = check_touchpad()
    if not has_touchpad:
        show_warning_dialog()

    try:
        from touchpadindicator import main
        main()
    except ImportError as e:
        dialog = Gtk.MessageDialog(
            None,
            Gtk.DialogFlags.MODAL,
            Gtk.MessageType.ERROR,
            Gtk.ButtonsType.OK,
            f"Error loading Touchpad Indicator: {str(e)}\nPlease check if the application is properly installed."
        )
        dialog.run()
        dialog.destroy()
        sys.exit(1)
    except Exception as e:
        dialog = Gtk.MessageDialog(
            None,
            Gtk.DialogFlags.MODAL,
            Gtk.MessageType.ERROR,
            Gtk.ButtonsType.OK,
            f"Unexpected error: {str(e)}"
        )
        dialog.run()
        dialog.destroy()
        sys.exit(1)

    sys.exit(0)
